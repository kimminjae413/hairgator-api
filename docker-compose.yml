# docker-compose.yml
# 헤어게이터 시스템 v5.0 Docker Compose 설정

version: '3.8'

services:
  # Redis 서비스
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - hairgator-network

  # 헤어게이터 메인 애플리케이션
  hairgator-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./static:/app/static
      - ./.env:/app/.env
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - hairgator-network
    command: ["python", "hairgator_integrated_v5.py"]

  # 선택사항: Nginx 프록시
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - hairgator-app
    restart: unless-stopped
    networks:
      - hairgator-network

volumes:
  redis_data:
    driver: local

networks:
  hairgator-network:
    driver: bridge